MODULE Module1
    ! Identifier for the EGM correction
    LOCAL VAR egmident egm_id;
    ! EGM pose frames
    LOCAL CONST pose egm_correction_frame := [[0, 0, 0], [1, 0, 0, 0]];
    LOCAL CONST pose egm_sensor_frame     := [[0, 0, 0], [1, 0, 0, 0]];
    ! The work object. Base Frame
    LOCAL PERS wobjdata egm_wobj := [FALSE, TRUE, "", [[0.0, 0.0, 0.0],[1.0, 0.0, 0.0, 0.0]], [[0.0, 0.0, 0.0],[1.0, 0.0, 0.0, 0.0]]];
    ! Limits for convergence
    ! Cartesian: +-1 mm
    LOCAL CONST egm_minmax egm_condition_cartesian := [-0.1, 0.1];
    ! Orientation: +-1 degrees
    LOCAL CONST egm_minmax egm_condition_orient := [-0.1, 0.1];
    
    ! Actual State {Main State-Machine)
    VAR num actual_state := 0;
    
    CONST robtarget Target_INIT:=[[63.216469095,163.494541752,161.324792511],[0.506079495,-0.023222858,0.849413008,-0.147789664],[0,0,2,4],[101.964427132,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget Target_GRASP:=[[457.320066834,57.630207513,48.04989228],[-0.000000157,0,0.870355756,-0.492423455],[0,1,1,4],[101.960019593,9E+09,9E+09,9E+09,9E+09,9E+09]];

    
    ! Description:                                                  !
    ! Externally Guided motion (EGM): Stream / Control - Main Cycle !
    PROC Main()
        ! Move to the starting position
        !MoveJ Target_GRASP, v100, fine, tool0\WObj:=wobj0;
            
        EGM_JOINT_CONTROL;
        
    ENDPROC
    
    PROC EGM_JOINT_CONTROL()
        ! Description:                                   !
        ! Externally Guided motion (EGM) - Joint Control !
          
        ! Release the EGM id.
        EGMReset egm_id;
            
        ! Register an EGM id.
        EGMGetId egm_id;
            
        ! Setup the EGM communication.
        EGMSetupUC ROB_L, egm_id, "default", "ROB_L", \Joint; 

        WHILE TRUE DO
            ! Prepare for an EGM communication session.
            EGMActJoint egm_id,
                        \WObj:=egm_wobj,
                        \J1:=egm_condition_orient
                        \J2:=egm_condition_orient
                        \J3:=egm_condition_orient
                        \J4:=egm_condition_orient
                        \J5:=egm_condition_orient
                        \J6:=egm_condition_orient
                        \J7:=egm_condition_orient
                        \LpFilter:=100
                        \SampleRate:=4
                        \MaxPosDeviation:=1000
                        \MaxSpeedDeviation:=1000;
                        
            ! Start the EGM communication session.
            EGMRunJoint egm_id, EGM_STOP_HOLD, \J1 \J2 \J3 \J4 \J5 \J6 \J7 \CondTime:=0.1 \RampInTime:=0.1 \RampOutTime:=0.1 \PosCorrGain:=1.0;
             
            ! Wait 2 seconds {No data from EGM sensor}
            WaitTime 2;
            
        ENDWHILE
        
        ERROR
        IF ERRNO = ERR_UDPUC_COMM THEN  
            TPWrite "Communication timedout";
            TRYNEXT;
        ENDIF
    ENDPROC
    
ENDMODULE